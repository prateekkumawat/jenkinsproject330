pipeline {
    agent {
        label "devops"
    }

    stages{
        stage("Clean Workspace") { 
            steps {
                cleanWs()
            }
        }
        stage("Code Checkout"){
          steps{ 
            git url:"https://github.com/prateekkumawat/jenkinsproject330.git", branch: "main"
          }
        }

        stage("build Docker Image") { 
            steps { 
                sh "docker build --no-cache -t static ."
            }
        }

        stage("Image Push"){
            steps{
                withCredentials([usernamePassword(credentialsId: 'dockercreds', usernameVariable: 'docker_user', passwordVariable: 'docker_pass')]) {
                   sh "docker tag static ${env.docker_user}/static:${BUILD_NUMBER}"
                   sh "docker login -u ${env.docker_user} -p ${env.docker_pass}"
                   sh "docker push ${env.docker_user}/static:${BUILD_NUMBER}"  
                }
            }
        }

        stage("Image Cleanup"){
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockercreds', usernameVariable: 'docker_user', passwordVariable: 'docker_pass')]) {
                   sh "docker image rm -f ${env.docker_user}/static:${BUILD_NUMBER}"
                   sh "docker image rm -f static:latest"
                }   
            }
        }

        stage("agent Deployment"){
            steps{
                withCredentials([sshUserPrivateKey(credentialsId: 'deploymentagent', variable: 'SSH_CREDENTIALS')]){
                    sh "ssh -i ${SSH_CREDENTIALS.privatekey} ${SSH_CREDENTIALS.user}@172.31.18.162 'docker ps'"   
                }
            }    
        }
    }
}
pipeline {
    agent {
        label "devops"
    }
    environment {
        SCANNER_HOME=tool 'sonar-scanner'
    }

    stages{
        stage("Clean Workspace") { 
            steps {
                cleanWs()
            }
        }

        stage("Code Checkout"){
          steps{ 
            git url:"https://github.com/prateekkumawat/jenkinsproject330.git", branch: "terraform"
          }
        }

        stage('Sonarqube Analysis') {
            steps {
                dir('terraform/') {
                    withSonarQubeEnv('sonar-server') {
                        sh ''' $SCANNER_HOME/bin/sonar-scanner \
                        -Dsonar.projectName=jenkins-cloudinfrabuild-automate-terraform \
                        -Dsonar.projectKey=jenkins-cloudinfrabuild-automate-terraform '''
                    }
                }
            }
        }
        stage('QualityGate') {
            steps {
                script {
                    dir('terraform/') {
                        waitForQualityGate abortPipeline: false, credentialsId: 'jenkins-cloudinfrabuild-automate-terraform' 
                    }
                }
            }
        }

         stage('Trivy FScan') {
            steps {
                dir('terraform/') {
                    sh 'trivy fs . > /home/ubuntu/trivyfs.txt'
                }
            }
        }
        
        stage("terraform Init"){
        steps { 
            dir('terraform/') {
                sh 'terraform init'
            }    
        }
      }

      stage("terraform plan"){
        steps {
            dir('terraform/') {
                sh 'terraform plan'
            }    
        }
      } 

      stage("terraform apply") { 
        steps { 
            dir('terraform/') {
                sh 'terraform apply --auto-approve'
            }
        }
      } 
    }
}